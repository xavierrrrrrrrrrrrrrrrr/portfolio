// Glassmorphism Portfolio JavaScript

document.addEventListener('DOMContentLoaded', function() {
    // Mobile Navigation
    const hamburger = document.querySelector('.hamburger');
    const navMenu = document.querySelector('.nav-menu');

    if (hamburger && navMenu) {
        hamburger.addEventListener('click', function() {
            navMenu.classList.toggle('active');
            hamburger.classList.toggle('active');
        });

        // Close mobile menu when clicking on a link
        document.querySelectorAll('.nav-link').forEach(link => {
            link.addEventListener('click', () => {
                navMenu.classList.remove('active');
                hamburger.classList.remove('active');
            });
        });
    }

    // Smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        });
    });

    // Navbar scroll effect
    const navbar = document.querySelector('.navbar');
    if (navbar) {
        window.addEventListener('scroll', function() {
            if (window.scrollY > 100) {
                navbar.style.background = 'rgba(255, 255, 255, 0.15)';
                navbar.style.backdropFilter = 'blur(15px)';
            } else {
                navbar.style.background = 'rgba(255, 255, 255, 0.1)';
                navbar.style.backdropFilter = 'blur(8px)';
            }
        });
    }

    // Parallax effect for floating elements
    window.addEventListener('scroll', function() {
        const scrolled = window.pageYOffset;
        const elements = document.querySelectorAll('.floating-element');
        
        elements.forEach((element, index) => {
            const speed = (index + 1) * 0.3;
            element.style.transform = `translateY(${scrolled * speed}px) rotate(${scrolled * 0.05}deg)`;
        });
    });

    // Intersection Observer for animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0) scale(1)';
            }
        });
    }, observerOptions);

    // Observe elements for animation
    document.querySelectorAll('.project-card, .achievement-card, .timeline-item, .about-text, .skills-container').forEach(el => {
        el.style.opacity = '0';
        el.style.transform = 'translateY(30px) scale(0.95)';
        el.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
        observer.observe(el);
    });

    // Dynamic skill tags (remove duplicates and add hover effects)
    const skillsCloud = document.querySelector('.skills-cloud');
    if (skillsCloud) {
        const skills = Array.from(skillsCloud.children);
        const uniqueSkills = [];
        const seenSkills = new Set();

        skills.forEach(skill => {
            const skillText = skill.textContent.trim();
            if (!seenSkills.has(skillText)) {
                seenSkills.add(skillText);
                uniqueSkills.push(skill);
            }
        });

        // Clear and re-add unique skills
        skillsCloud.innerHTML = '';
        uniqueSkills.forEach((skill, index) => {
            skill.style.animationDelay = `${index * 0.1}s`;
            skillsCloud.appendChild(skill);
        });
    }

    // Project card tilt effect
    document.querySelectorAll('.project-card[data-tilt]').forEach(card => {
        card.addEventListener('mousemove', function(e) {
            const rect = this.getBoundingClientRect();
            const x = e.clientX - rect.left;
            const y = e.clientY - rect.top;
            
            const centerX = rect.width / 2;
            const centerY = rect.height / 2;
            
            const rotateX = (y - centerY) / 10;
            const rotateY = (centerX - x) / 10;
            
            this.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateY(-10px)`;
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateY(0)';
        });
    });

    // Contact form handling
    const contactForm = document.getElementById('contact-form');
    if (contactForm) {
        contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const submitBtn = this.querySelector('button[type="submit"]');
            const originalContent = submitBtn.innerHTML;
            
            // Show loading state
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i><span>Sending...</span>';
            submitBtn.disabled = true;
            
            // Simulate form submission
            setTimeout(() => {
                submitBtn.innerHTML = '<i class="fas fa-check"></i><span>Message Sent!</span>';
                submitBtn.style.background = 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)';
                
                // Reset form after delay
                setTimeout(() => {
                    submitBtn.innerHTML = originalContent;
                    submitBtn.disabled = false;
                    submitBtn.style.background = '';
                    contactForm.reset();
                    
                    // Reset form labels
                    document.querySelectorAll('.form-label').forEach(label => {
                        label.style.top = '1rem';
                        label.style.left = '1rem';
                        label.style.fontSize = '1rem';
                        label.style.color = 'var(--text-muted)';
                    });
                }, 2000);
            }, 1500);
        });

        // Form input focus effects
        const formInputs = contactForm.querySelectorAll('.form-input');
        formInputs.forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.style.transform = 'scale(1.02)';
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.style.transform = 'scale(1)';
            });
        });
    }

    // Glassmorphism hover effects
    document.querySelectorAll('.glass').forEach(element => {
        element.addEventListener('mouseenter', function() {
            this.style.background = 'rgba(255, 255, 255, 0.15)';
            this.style.backdropFilter = 'blur(15px)';
            this.style.border = '1px solid rgba(255, 255, 255, 0.3)';
        });
        
        element.addEventListener('mouseleave', function() {
            this.style.background = 'rgba(255, 255, 255, 0.1)';
            this.style.backdropFilter = 'blur(8px)';
            this.style.border = '1px solid rgba(255, 255, 255, 0.2)';
        });
    });

    // Floating animation for hero avatar
    const heroAvatar = document.querySelector('.hero-avatar');
    if (heroAvatar) {
        let floatDirection = 1;
        setInterval(() => {
            heroAvatar.style.transform = `translateY(${floatDirection * 10}px)`;
            floatDirection *= -1;
        }, 2000);
    }

    // Dynamic gradient background
    let gradientIndex = 0;
    const gradients = [
        'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
        'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
        'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
        'linear-gradient(135deg, #fa709a 0%, #fee140 100%)'
    ];

    const gradientBg = document.querySelector('.gradient-bg');
    if (gradientBg) {
        setInterval(() => {
            gradientIndex = (gradientIndex + 1) % gradients.length;
            gradientBg.style.background = gradients[gradientIndex];
        }, 8000);
    }

    // Scroll progress indicator
    const scrollProgress = document.createElement('div');
    scrollProgress.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 0%;
        height: 4px;
        background: linear-gradient(90deg, #f093fb, #f5576c);
        z-index: 9999;
        transition: width 0.1s ease;
    `;
    document.body.appendChild(scrollProgress);

    window.addEventListener('scroll', () => {
        const scrolled = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
        scrollProgress.style.width = scrolled + '%';
    });

    // Achievement cards stagger animation
    const achievementCards = document.querySelectorAll('.achievement-card');
    achievementCards.forEach((card, index) => {
        card.style.animationDelay = `${index * 0.2}s`;
        
        // Add random floating animation
        setInterval(() => {
            const randomX = (Math.random() - 0.5) * 10;
            const randomY = (Math.random() - 0.5) * 10;
            card.style.transform += ` translate(${randomX}px, ${randomY}px)`;
            
            setTimeout(() => {
                card.style.transform = card.style.transform.replace(/ translate\([^)]*\)/g, '');
            }, 1000);
        }, 3000 + index * 1000);
    });

    // Cursor glow effect
    const cursor = document.createElement('div');
    cursor.style.cssText = `
        position: fixed;
        width: 20px;
        height: 20px;
        background: radial-gradient(circle, rgba(240, 147, 251, 0.8) 0%, transparent 70%);
        border-radius: 50%;
        pointer-events: none;
        z-index: 9999;
        transition: transform 0.1s ease;
    `;
    document.body.appendChild(cursor);

    document.addEventListener('mousemove', (e) => {
        cursor.style.left = e.clientX - 10 + 'px';
        cursor.style.top = e.clientY - 10 + 'px';
    });

    // Hide cursor on mobile
    if (window.innerWidth <= 768) {
        cursor.style.display = 'none';
    }

    // Console easter egg
    console.log(`
    ✨ Welcome to {{personalInfo.name}}'s Glassmorphism Portfolio! ✨
    
    🎨 This portfolio features:
    • Glassmorphism design effects
    • Smooth animations and transitions
    • Interactive hover effects
    • Responsive design
    • Modern UI/UX patterns
    
    Built with passion and modern web technologies! 🚀
    `);

    // Performance optimization
    let ticking = false;
    function updateAnimations() {
        // Batch DOM updates here
        ticking = false;
    }

    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(updateAnimations);
            ticking = true;
        }
    }

    // Optimize scroll events
    window.addEventListener('scroll', requestTick);
});

// Utility function for random animations
function getRandomFloat(min, max) {
    return Math.random() * (max - min) + min;
}

// Add loading animation
window.addEventListener('load', function() {
    document.body.style.opacity = '0';
    document.body.style.transition = 'opacity 0.5s ease';
    
    setTimeout(() => {
        document.body.style.opacity = '1';
    }, 100);
});